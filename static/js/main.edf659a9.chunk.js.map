{"version":3,"sources":["redux/dialogs_reducer.ts","utils/objects-helpers/objects-helpers.ts","redux/users_reducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/FindFriends/FindFriends.module.css","common/Preloader/Preloader.module.css","components/Login/Login.module.css","components/Navbar/Navbar.module.css","redux/auth_reducer.ts","api/api.ts","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/FindFriends/FindFriends.tsx","logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app_reducer.ts","redux/sideBar_reducer.ts","redux/redux-store.ts","components/Login/Login.tsx","App.tsx","index.tsx","common/Preloader/Preloader.tsx","common/FormsControls/FormsControls.tsx","components/Header/Header.module.css","common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","App.module.css","redux/profile_reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageText","dialogsReducer","state","action","type","newMessagePost","Date","getTime","newMessageBody","addMessage","updateObjectInArray","items","itemID","objPropName","newObjProps","map","el","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","usersReducer","userID","followed","page","totalCount","progress","filter","followUser","unFollowUser","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getResponseUsers","dispatch","a","usersApi","getUsers","data","followUnFollowFlow","apiMethod","actionCreator","resultCode","follow","unFollow","module","exports","SET_AUTH_USERS_DATA","GET_CAPTCHA_URL","userId","login","email","isAuth","captchaURL","authReducer","payload","setAuthUsersData","getCaptchaURLSuccess","getAuthUserData","authApi","amIsAuth","response","password","rememberMe","captcha","getCaptchaURL","length","stopSubmit","_error","logout","securityApi","getCaptcha","url","instance","axios","create","withCredentials","headers","baseURL","get","then","delete","post","profileApi","getProfile","getStatus","updateStatus","newStatus","put","status","savePhoto","photoFile","formData","FormData","append","saveProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","AppNav","item","activeClassName","active","to","src","alt","News","Music","Settings","FindFriends","findFriends","Header","Preloader","AppHeader","logo","AppLogo","loginBlock","loginTitle","userName","style","marginLeft","onClick","HeaderContainer","this","props","React","Component","compose","connect","auth","SET_INITIALIZED","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","sideBar","form","formReducer","app","value","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","validate","required","component","Input","placeholder","createField","formSummaryError","LoginPage","useSelector","useDispatch","l","wrapper","href","rel","target","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initializeApp","fallback","AppWrapper","AppContent","exact","path","render","AppContainer","promise","Promise","all","MainApp","StrictMode","ReactDOM","document","getElementById","ldsRoller","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","text","undefined","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_PROFILE_STATUS","UPDATE_PROFILE_STATUS","SAVE_PHOTO_SUCCESS","posts","likesCount","newPostText","profileUser","profileStatus","newPost","newPostMessage","photos","photo","addPost","setProfileStatus","getUserProfile","alert","file","Error","getState","reject"],"mappings":"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","file":"static/js/main.edf659a9.chunk.js","sourcesContent":["// Actions\r\nconst ADD_MESSAGE = 'social-network-ts/dialogs_reducer/ADD_MESSAGE';\r\n\r\n//Types\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nexport type ActionsTypesDR = ReturnType<typeof addMessage>\r\n\r\n//Initial State\r\nlet initialState: DialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Masha'},\r\n        {id: 3, name: 'Sasha'},\r\n        {id: 4, name: 'Kirill'},\r\n        {id: 5, name: 'Vasil'},\r\n        {id: 6, name: 'Jon'},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi! how are you?'},\r\n        {id: 2, message: 'Hi! How old are you?'},\r\n        {id: 3, message: 'Hi! Where are you from?'},\r\n        {id: 4, message: 'Hello! I don\\'t need books'},\r\n        {id: 5, message: 'How do you do?'},\r\n        {id: 6, message: 'I\\'m fine'},\r\n    ] as Array<MessageType>,\r\n    newMessageText: '' as string\r\n};\r\n\r\n// Reducer\r\nexport const dialogsReducer = (state: DialogPageType = initialState, action: ActionsTypesDR): DialogPageType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessagePost: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessageBody\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessagePost],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const addMessage = (newMessageBody: string) => ({type: ADD_MESSAGE, newMessageBody}) as const","export const updateObjectInArray = (items: any[], itemID: number, objPropName: string, newObjProps: any) => {\r\n    return items.map(el => el[objPropName] === itemID\r\n        ? {...el, ...newObjProps}\r\n        : el)\r\n}","import {AppThunk} from \"./redux-store\";\r\nimport {usersApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers/objects-helpers\";\r\n\r\n// Actions\r\n// enum Users {\r\n//     FOLLOW = 'social-network-ts/users_reducer/FOLLOW',\r\n//     UNFOLLOW = 'social-network-ts/users_reducer/UNFOLLOW',\r\n//     SET_USERS = 'social-network-ts/users_reducer/SET_USERS',\r\n//     SET_CURRENT_PAGE = 'social-network-ts/users_reducer/SET_CURRENT_PAGE',\r\n//     SET_TOTAL_USERS_COUNT = 'social-network-ts/users_reducer/SET_TOTAL_USERS_COUNT',\r\n//     TOGGLE_IS_FETCHING = 'social-network-ts/users_reducer/TOGGLE_IS_FETCHING',\r\n//     TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network-ts/users_reducer/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n// }\r\n\r\nconst FOLLOW = 'social-network-ts/users_reducer/FOLLOW';\r\nconst UNFOLLOW = 'social-network-ts/users_reducer/UNFOLLOW';\r\nconst SET_USERS = 'social-network-ts/users_reducer/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network-ts/users_reducer/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network-ts/users_reducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network-ts/users_reducer/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network-ts/users_reducer/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n//Types\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type FollowAT = ReturnType<typeof followUser>\r\nexport type UnFollowAT = ReturnType<typeof unFollowUser>\r\nexport type SetUsersAT = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageAT = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleFollowingProgressAT = ReturnType<typeof toggleFollowingProgress>\r\nexport type UsersActionTypes =\r\n    | FollowAT\r\n    | UnFollowAT\r\n    | SetUsersAT\r\n    | SetCurrentPageAT\r\n    | SetTotalUsersCountAT\r\n    | ToggleFollowingProgressAT\r\n    | ToggleIsFetchingAT;\r\n\r\n//Initial State\r\nconst initialState: UsersPageType = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUserCount: 100,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\n// Reducer\r\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersActionTypes): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(el => el.id === action.userID\r\n                //     ? {...el, followed: true}\r\n                //     : el)\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(el => el.id === action.userID\r\n                //     ? {...el, followed: false}\r\n                //     : el)\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalCount,\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.progress\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const followUser = (userID: number) => ({type: FOLLOW, userID} as const)\r\nexport const unFollowUser = (userID: number) => ({type: UNFOLLOW, userID} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (page: number) => ({type: SET_CURRENT_PAGE, page} as const)\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleFollowingProgress = (progress: boolean, userID: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    progress,\r\n    userID,\r\n} as const)\r\n\r\n// ThunkCreator\r\nexport const getResponseUsers = (currentPage: number): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersApi.getUsers(currentPage)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnFollowFlow = async (dispatch: Dispatch, userID: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userID));\r\n    let data = await apiMethod(userID);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userID))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userID));\r\n};\r\n\r\nexport const follow = (userID: number): AppThunk => {\r\n    // return async (dispatch) => {\r\n    //     dispatch(toggleFollowingProgress(true, userID));\r\n    //     let data = await usersApi.follow(userID)\r\n    //     if (data.resultCode === 0) {\r\n    //         dispatch(followUser(userID))\r\n    //     }\r\n    //     dispatch(toggleFollowingProgress(false, userID));\r\n    // }\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userID, usersApi.follow, followUser);\r\n    }\r\n}\r\n\r\nexport const unFollow = (userID: number): AppThunk => {\r\n    // return async (dispatch) => {\r\n    //     dispatch(toggleFollowingProgress(true, userID));\r\n    //     let data = await usersApi.unFollow(userID)\r\n    //     if (data.resultCode === 0) {\r\n    //         dispatch(unFollowUser(userID))\r\n    //     }\r\n    //     dispatch(toggleFollowingProgress(false, userID));\r\n    // }\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userID, usersApi.unFollow, unFollowUser);\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__ZrF7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__LLZrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__30q53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFriends\":\"FindFriends_findFriends__3u4U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"Preloader_ldsRoller__2oF8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3ctdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppNav\":\"Navbar_AppNav__2O-N-\",\"item\":\"Navbar_item__36B1R\",\"active\":\"Navbar_active__GyOf7\"};","import {AppThunk} from \"./redux-store\";\r\nimport {authApi, securityApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// Actions\r\nconst SET_AUTH_USERS_DATA = 'social-network-ts/auth_reducer/SET_AUTH_USERS_DATA';\r\nconst TOGGLE_IS_FETCHING = 'social-network-ts/auth_reducer/TOGGLE_IS_FETCHING';\r\nconst GET_CAPTCHA_URL = 'social-network-ts/auth_reducer/GET_CAPTCHA_URL';\r\n\r\n//Types\r\nexport type AuthPageType = typeof initialState;\r\nexport type AuthActionTypes =\r\n    | ReturnType<typeof setAuthUsersData>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof getCaptchaURLSuccess>\r\n\r\n//Initial State\r\nconst initialState = {\r\n  userId: 5513 as number | null,\r\n  login: 'hrudkouski' as string | null,\r\n  email: 'aprilshower19@gmail.com' as string | null,\r\n  isAuth: false as boolean,\r\n  isFetching: false as boolean,\r\n  captchaURL: null as string | null, // if null, then captcha is not required\r\n}\r\n\r\n// Reducer\r\nexport const authReducer = (state: AuthPageType = initialState, action: AuthActionTypes): AuthPageType => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USERS_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case GET_CAPTCHA_URL:\r\n      return {...state, ...action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action Creators\r\nexport const setAuthUsersData = (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\r\n  type: SET_AUTH_USERS_DATA,\r\n  payload: {userId, login, email, isAuth}\r\n} as const)\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching\r\n} as const)\r\n\r\nexport const getCaptchaURLSuccess = (captchaURL: string | null) => ({\r\n  type: GET_CAPTCHA_URL,\r\n  payload: {captchaURL}\r\n} as const)\r\n\r\n// Thunk Creators\r\nexport const getAuthUserData = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await authApi.amIsAuth()\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(toggleIsFetching(false));\r\n      let {id, login, email} = response.data.data;\r\n      dispatch(setAuthUsersData(id, login, email, true));\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await authApi.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData())\r\n    } else if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaURL())\r\n    } else {\r\n      let message = response.data.messages.length > 0 ? response.data.messages : 'Some error';\r\n      let action = stopSubmit('login', {_error: message});\r\n      dispatch(action)\r\n    }\r\n    dispatch(toggleIsFetching(false));\r\n  }\r\n}\r\n\r\nexport const logout = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await authApi.logout()\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setAuthUsersData(null, null, null, false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCaptchaURL = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    const response = await securityApi.getCaptcha()\r\n    const captchaURL = response.data.url;\r\n    dispatch(getCaptchaURLSuccess(captchaURL))\r\n  }\r\n}","import axios from \"axios\";\r\nimport {ProfileFormDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  headers: {'API-KEY': '3af7a44d-0a6b-4bf7-b34b-b5730fa5756f'},\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n})\r\n\r\nexport const usersApi = {\r\n  getUsers(currentPage: number) {\r\n    return instance.get(`users?page=${currentPage}&count=10`)\r\n        .then(response => {\r\n          return response.data;\r\n        })\r\n  },\r\n  unFollow(id: number) {\r\n    return instance.delete(`follow/${id}`)\r\n        .then(response => {\r\n          return response.data;\r\n        })\r\n  },\r\n  follow(id: number) {\r\n    return instance.post(`follow/${id}`)\r\n        .then(response => {\r\n          return response.data;\r\n        })\r\n  },\r\n}\r\n\r\nexport const profileApi = {\r\n  getProfile(userID: number | null) {\r\n    return instance.get(`profile/${userID}`)\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get(`profile/status/${userId}`)\r\n  },\r\n  updateStatus(newStatus: string) {\r\n    return instance.put(`profile/status`, {status: newStatus})\r\n  },\r\n  savePhoto(photoFile: File) {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photoFile)\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  },\r\n  saveProfile(formData: ProfileFormDataType) {\r\n    return instance.put(`profile`, formData)\r\n  },\r\n}\r\n\r\nexport const authApi = {\r\n  amIsAuth() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email: string, password: string, rememberMe: boolean = false, captcha: string | null) {\r\n    return instance.post(`auth/login`, {\r\n      email, password, rememberMe, captcha\r\n    })\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n  }\r\n}\r\n\r\nexport const securityApi = {\r\n  getCaptcha() {\r\n    return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n  },\r\n}\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n  url: string | null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.AppNav}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/profile\"}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/dialogs\"}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/news\"}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/users\"}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/music\"}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/settings\"}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/findFriends\"}>Find friends</NavLink>\r\n                <div><img\r\n                    src='https://mpng.subpng.com/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'\r\n                    alt=\"Friends\"/>\r\n                    <img\r\n                        src='https://mpng.subpng.com/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'\r\n                        alt=\"Friends\"/>\r\n                    <img\r\n                        src='https://mpng.subpng.com/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'\r\n                        alt=\"Friends\"/></div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Music.module.css'\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Settings.module.css'\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './FindFriends.module.css'\r\n\r\nexport const FindFriends = () => {\r\n    return (\r\n        <div className={s.findFriends}>\r\n            FindFriends\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from \"../../logo.svg\";\r\nimport s from './Header.module.css'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n    isFetching: boolean\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({login, isFetching, isAuth, logout}) => {\r\n\r\n    if (isFetching) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <header className={s.AppHeader}>\r\n            <img src={logo} className={s.AppLogo} alt=\"logo\"/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? <div>\r\n                        <span className={s.loginTitle}>Username: </span>\r\n                        <span className={s.userName}>{login}</span>\r\n                        <button style={{marginLeft: '15px'}} onClick={logout}>LogOut</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>\r\n                        Please login to continue\r\n                    </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, setAuthUsersData, toggleIsFetching} from \"../../redux/auth_reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from 'redux';\r\n\r\nexport type MapStatePropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n};\r\ntype MapDispatchToPropsType = {\r\n    setAuthUsersData: (userId: number, login: string, email: string) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    logout: () => void\r\n}\r\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchToPropsType;\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        isFetching: state.auth.isFetching,\r\n    };\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setAuthUsersData,\r\n        toggleIsFetching,\r\n        logout\r\n    }),\r\n)(HeaderContainer);\r\n","// Actions\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {getAuthUserData, toggleIsFetching} from \"./auth_reducer\";\r\n\r\nconst SET_INITIALIZED = 'social-network-ts/app_reducer/SET_INITIALIZED'\r\n\r\n//Types\r\nexport type ActionsTypesAPP = ReturnType<typeof setInitialized>;\r\ntype AppStateType = typeof initialState;\r\n\r\n//Initial State\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\n// Reducer\r\nexport const appReducer = (state: AppStateType = initialState, action: ActionsTypesAPP): AppStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: action.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setInitialized = (value: boolean) => {\r\n    return {type: SET_INITIALIZED, value} as const\r\n}\r\n\r\n// ThunkCreator\r\nexport const initializeApp = (): AppThunk => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then( () => {\r\n                dispatch(setInitialized(true))\r\n                dispatch(toggleIsFetching(false));\r\n            })\r\n    }\r\n}","import {ActionsTypesDR} from \"./dialogs_reducer\"; // Refactoring\r\n\r\n//Types\r\nexport type SideBarType = {}\r\n\r\n//Initial State\r\nlet initialState: SideBarType = {};\r\n\r\n// Reducer\r\nexport const sideBarReducer = (state: SideBarType = initialState, action: ActionsTypesDR): SideBarType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ActionsTypesPR, profileReducer} from \"./profile_reducer\";\r\nimport {UsersActionTypes, usersReducer} from \"./users_reducer\";\r\nimport {AuthActionTypes, authReducer} from \"./auth_reducer\";\r\nimport {ActionsTypesDR, dialogsReducer} from \"./dialogs_reducer\";\r\nimport {sideBarReducer} from \"./sideBar_reducer\";\r\nimport thunkMiddleWare, {ThunkAction} from 'redux-thunk';\r\nimport {FormAction, reducer as formReducer} from 'redux-form';\r\nimport {ActionsTypesAPP, appReducer} from \"./app_reducer\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppActionType =\r\n    | ActionsTypesPR\r\n    | ActionsTypesDR\r\n    | UsersActionTypes\r\n    | AuthActionTypes\r\n    | FormAction\r\n    | ActionsTypesAPP\r\n// export type StoreType = typeof store;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionType>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport s from '../../common/FormsControls/FormsControls.module.css'\r\nimport l from '../../components/Login/Login.module.css'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\ntype LoginPropsType = {\r\n  captchaURL: string | null\r\n}\r\n\r\nexport type LoginFormDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType, LoginPropsType> & LoginPropsType>\r\n    = (({\r\n          handleSubmit,\r\n          error,\r\n          captchaURL,\r\n        }) => {\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <Field\r\n            validate={[required]}\r\n            component={Input}\r\n            name='email'\r\n            placeholder='email'/>\r\n        <Field\r\n            validate={[required]}\r\n            component={Input}\r\n            name='password'\r\n            placeholder='password'\r\n            type={'password'}/>\r\n        <Field\r\n            component={Input}\r\n            name='rememberMe'\r\n            type='checkbox'/> <span>remember me</span>\r\n\r\n        <div>\r\n          {captchaURL && <img src={captchaURL} alt={captchaURL}/>}\r\n        </div>\r\n\r\n        {captchaURL && createField('captcha', 'Symbols from image', Input, [])}\r\n\r\n        <div>\r\n          <button>Login</button>\r\n        </div>\r\n\r\n        {error && <span className={s.formSummaryError}>\r\n                {error}\r\n            </span>}\r\n      </form>\r\n  )\r\n})\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormDataType, LoginPropsType>({form: 'loginForm'})(LoginForm)\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\r\n  const captchaURL = useSelector((state: AppStateType) => state.auth.captchaURL)\r\n  const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n  const isFetching = useSelector((state: AppStateType) => state.auth.isFetching)\r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmit = (formData: LoginFormDataType) => {\r\n    dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n  }\r\n\r\n  if (isAuth) return <Redirect to={`/profile/5513`}/>\r\n  if (isFetching) return <Preloader/>\r\n\r\n  return (\r\n      <div className={l.wrapper}>\r\n        <div>\r\n          <span>You can register -\r\n            <a href={'https://social-network.samuraijs.com/'}\r\n               rel={'noreferrer'}\r\n               target={'_blank'}>here\r\n            </a>\r\n          </span>\r\n          <div>or use test account:</div>\r\n          <div>Email: free@samuraijs.com</div>\r\n          <div>Password: free</div>\r\n        </div>\r\n\r\n        <h1>Please, login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL}/>\r\n      </div>\r\n  )\r\n}","import React, {Suspense} from 'react';\r\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom';\r\nimport s from '../src/App.module.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {FindFriends} from './components/FindFriends/FindFriends';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app_reducer\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {LoginPage} from './components/Login/Login';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\ntype MapDispatchToPropsType = { initializeApp: () => void };\r\nexport type MapStatePropsType = { initialized: boolean };\r\nexport type AppContainerPropsType = MapStatePropsType & MapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {initialized: state.app.initialized};\r\n}\r\n\r\nclass App extends React.Component<AppContainerPropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) return <Preloader/>\r\n\r\n    return (\r\n        <Suspense fallback={<Preloader/>}>\r\n          <HashRouter>\r\n            <div className={s.AppWrapper}>\r\n              <HeaderContainer/>\r\n              <Navbar/>\r\n              <div className={s.AppContent}>\r\n                <Switch>\r\n                  <Route exact path={'/'} render={() => <Redirect to=\"/profile\"/>}/>\r\n                  <Route render={() => <ProfileContainer/>} path=\"/profile/:userID?\"/>\r\n                  <Route render={() => <DialogsContainer/>} exact path=\"/dialogs\"/>\r\n                  <Route render={() => <UsersContainer/>} exact path=\"/users\"/>\r\n                  <Route component={News} path=\"/news\"/>\r\n                  <Route component={Music} path=\"/music\"/>\r\n                  <Route component={Settings} path=\"/settings\"/>\r\n                  <Route component={FindFriends} path=\"/findFriends\"/>\r\n                  <Route component={LoginPage} path=\"/login\"/>\r\n                  <Route path={'*'} render={() => <div>ERROR 404</div>}/>\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </HashRouter>\r\n        </Suspense>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n      initializeApp,\r\n    }),\r\n)(App);\r\n\r\nexport const MainApp = () => {\r\n  return <React.StrictMode>\r\n    <Provider store={store}>\r\n      <AppContainer/>\r\n    </Provider>\r\n  </React.StrictMode>\r\n}\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {MainApp} from \"./App\";\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsRoller}>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Field, WrappedFieldProps} from \"redux-form\";\r\nimport s from './FormsControls.module.css'\r\nimport {ValidatorType} from \"../../utils/validators/validators\";\r\n\r\nexport const FormControl: React.FC<any> = ({meta: {error, touched}, children}) => {\r\n\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n    name: FormKeysType,\r\n    placeholder: string | undefined,\r\n    component: string | React.Component | React.FC<WrappedFieldProps>,\r\n    validate: ValidatorType[],\r\n    props = {},\r\n    className = '',\r\n    text = '',\r\n    id = ''\r\n) {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validate}\r\n                component={component}\r\n                {...props}\r\n                id={id}\r\n                className={className}\r\n            />\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__3RgHs\",\"AppLogo\":\"Header_AppLogo__3z8wq\",\"loginBlock\":\"Header_loginBlock__1mU5U\",\"userName\":\"Header_userName__lGbDY\",\"loginTitle\":\"Header_loginTitle__vm67N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1eM7x\",\"error\":\"FormsControls_error__3vels\",\"formSummaryError\":\"FormsControls_formSummaryError__1z8YO\"};","export type ValidatorType = (value: string | undefined) => string | undefined\r\n\r\nexport const required = (value: string) => value ? undefined : \"Field is required\";\r\n\r\nexport const maxLengthCreator = (maxLength: string) => (value: string) => {\r\n    return (+value.length > +maxLength) ? `Max length is ${maxLength} symbols` : undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"App_AppWrapper__V62o8\",\"AppContent\":\"App_AppContent__qt_pG\"};","import {AppDispatch, AppStateType} from \"./redux-store\";\r\nimport {profileApi} from \"../api/api\";\r\nimport {ProfileFormDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\nimport {toggleIsFetching} from \"./auth_reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// Actions\r\nconst ADD_POST = 'social-network-ts/profile_reducer/ADD_POST';\r\nconst SET_USER_PROFILE = 'social-network-ts/profile_reducer/SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS = 'social-network-ts/profile_reducer/SET_PROFILE_STATUS';\r\nconst UPDATE_PROFILE_STATUS = 'social-network-ts/profile_reducer/UPDATE_PROFILE_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'social-network-ts/profile_reducer/SAVE_PHOTO_SUCCESS';\r\n\r\n//Types\r\nexport type PostType = {\r\n  id: number,\r\n  message: string,\r\n  likesCount: number\r\n}\r\ntype PhotoType = {\r\n  small: string\r\n  large: string\r\n}\r\nexport type ContactsType = {\r\n  facebook: string\r\n  website: string\r\n  vk: string\r\n  twitter: string\r\n  instagram: string\r\n  youtube: string\r\n  github: string\r\n  mainLink: string\r\n}\r\nexport type ProfileUserType = {\r\n  aboutMe: string\r\n  contacts: ContactsType,\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  userId: number\r\n  photos: PhotoType\r\n}\r\nexport type ProfilePageType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n  profileUser: ProfileUserType | null\r\n  profileStatus: string\r\n}\r\nexport type addPostAT = ReturnType<typeof addPost>\r\nexport type setUsersProfileAT = ReturnType<typeof setUsersProfile>\r\nexport type setProfileStatusAT = ReturnType<typeof setProfileStatus>\r\nexport type updateProfileStatusAT = ReturnType<typeof updateProfileStatus>\r\nexport type savePhotoSuccessAT = ReturnType<typeof savePhotoSuccess>\r\nexport type ActionsTypesPR = addPostAT\r\n    | setUsersProfileAT\r\n    | updateProfileStatusAT\r\n    | savePhotoSuccessAT\r\n    | setProfileStatusAT;\r\n\r\n//Initial State\r\nconst initialState: ProfilePageType = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      message: 'Перебираемые (или итерируемые) объекты – это...',\r\n      likesCount: 9\r\n    },\r\n    {\r\n      id: 2,\r\n      message: 'Конечно же, сами массивы являются перебираемыми...',\r\n      likesCount: 19\r\n    },\r\n    {\r\n      id: 3,\r\n      message: 'Если объект не является массивом, но представляет...',\r\n      likesCount: 3\r\n    },\r\n  ] as Array<PostType>,\r\n  newPostText: '' as string,\r\n  profileUser: null as null | ProfileUserType,\r\n  profileStatus: '',\r\n};\r\n\r\n// Reducer\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionsTypesPR): ProfilePageType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost: PostType = {\r\n        id: new Date().getTime(),\r\n        message: action.newPostMessage,\r\n        likesCount: 19\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      };\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profileUser: action.profileUser\r\n      }\r\n    case SET_PROFILE_STATUS:\r\n      return {\r\n        ...state,\r\n        profileStatus: action.profileStatus,\r\n      }\r\n    case UPDATE_PROFILE_STATUS:\r\n      return {\r\n        ...state,\r\n        profileStatus: action.newStatus,\r\n      }\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profileUser: {\r\n          ...state.profileUser,\r\n          photos: action.photo\r\n        } as ProfileUserType\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action Creators\r\nexport const addPost = (newPostMessage: string) => {\r\n  return {type: ADD_POST, newPostMessage} as const\r\n}\r\nexport const setUsersProfile = (profileUser: ProfileUserType) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profileUser,\r\n  } as const\r\n}\r\nexport const setProfileStatus = (profileStatus: string) => {\r\n  return {\r\n    type: SET_PROFILE_STATUS,\r\n    profileStatus,\r\n  } as const\r\n}\r\nexport const updateProfileStatus = (newStatus: string) => {\r\n  return {\r\n    type: UPDATE_PROFILE_STATUS,\r\n    newStatus,\r\n  } as const\r\n}\r\nexport const savePhotoSuccess = (photo: PhotoType) => {\r\n  return {\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photo,\r\n  } as const\r\n}\r\n\r\n// ThunkCreator\r\nexport const getUserProfile = (userID: number) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    let response = await profileApi.getProfile(userID)\r\n    dispatch(setUsersProfile(response.data));\r\n  }\r\n}\r\nexport const getStatus = (userID: number) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    let response = await profileApi.getStatus(userID)\r\n    dispatch(setProfileStatus(response.data));\r\n  }\r\n}\r\nexport const updateStatus = (newStatus: string) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      let response = await profileApi.updateStatus(newStatus)\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setProfileStatus(response.data.status));\r\n      }\r\n    } catch (e) {\r\n      alert(e)\r\n    }\r\n  }\r\n}\r\nexport const savePhoto = (file: File) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      let response = await profileApi.savePhoto(file)\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n      }\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n}\r\nexport const saveProfile = (formData: ProfileFormDataType) => {\r\n  return async (dispatch: AppDispatch, getState: () => AppStateType) => {\r\n    const userID = getState().auth.userId;\r\n    dispatch(toggleIsFetching(true));\r\n    const response = await profileApi.saveProfile(formData)\r\n    if (response.data.resultCode === 0) {\r\n      if (userID) {\r\n        // @ts-ignore\r\n        dispatch(getUserProfile(userID));\r\n      } else {\r\n        // @ts-ignore\r\n        dispatch(stopSubmit('edit_profile', {\r\n          _error: response.data.messages[0]\r\n        }))\r\n        return Promise.reject(response.data.messages[0])\r\n      }\r\n    }\r\n    dispatch(toggleIsFetching(false));\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}