{"version":3,"sources":["api/api.ts","redux/auth_reducer.ts","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/FindFriends/FindFriends.tsx","logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app_reducer.ts","redux/sideBar_reducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/Header/Header.module.css","common/Preloader/Preloader.tsx","App.module.css","redux/profile_reducer.ts","redux/dialogs_reducer.ts","components/Navbar/Navbar.module.css","utils/objects-helpers/objects-helpers.ts","redux/users_reducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/FindFriends/FindFriends.module.css","common/Preloader/Preloader.module.css"],"names":["instance","axios","create","withCredentials","headers","baseURL","usersApi","getUsers","currentPage","get","then","response","data","unFollow","id","delete","follow","post","profileApi","getProfile","userID","getStatus","userId","updateStatus","newStatus","put","status","authApi","amIsAuth","login","email","password","rememberMe","logout","SET_AUTH_USERS_DATA","TOGGLE_IS_FETCHING","initialState","isAuth","isFetching","authReducer","state","action","type","payload","setAuthUsersData","toggleIsFetching","getAuthUserData","dispatch","a","resultCode","message","messages","length","stopSubmit","_error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","AppNav","item","activeClassName","active","to","src","alt","News","dialogs","Music","Settings","FindFriends","findFriends","Header","Preloader","AppHeader","logo","AppLogo","loginBlock","loginTitle","userName","style","marginLeft","onClick","HeaderContainer","this","props","React","Component","compose","connect","auth","SET_INITIALIZED","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","sideBar","form","formReducer","app","value","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","ProfileContainer","lazy","DialogsContainer","UsersContainer","Login","App","initializeApp","fallback","AppWrapper","AppContent","render","path","exact","component","AppContainer","promise","Promise","all","MainApp","StrictMode","ReactDOM","document","getElementById","module","exports","ldsRoller","ADD_POST","SET_USER_PROFILE","SET_PROFILE_STATUS","UPDATE_PROFILE_STATUS","posts","likesCount","newPostText","profileUser","profileStatus","newPost","Date","getTime","newPostMessage","addPost","setProfileStatus","getUserProfile","ADD_MESSAGE","name","newMessageText","newMessagePost","newMessageBody","addMessage","updateObjectInArray","items","itemID","objPropName","newObjProps","map","el","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUserCount","followingInProgress","followed","page","totalCount","progress","filter","followUser","unFollowUser","setCurrentPage","toggleFollowingProgress","getResponseUsers","followUnFollowFlow","apiMethod","actionCreator"],"mappings":"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","file":"static/js/main.9cb01d60.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '3af7a44d-0a6b-4bf7-b34b-b5730fa5756f'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage: number) {\r\n        return instance.get(`users?page=${currentPage}&count=10`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    follow(id: number) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(userID: number) {\r\n        return instance.get(`profile/${userID}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(newStatus: string) {\r\n        return instance.put(`/profile/status`, {status: newStatus})\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    amIsAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {\r\n            email, password, rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {AppThunk} from \"./redux-store\";\r\nimport {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// Actions\r\nconst SET_AUTH_USERS_DATA = 'social-network-ts/auth_reducer/SET_AUTH_USERS_DATA';\r\nconst TOGGLE_IS_FETCHING = 'social-network-ts/auth_reducer/TOGGLE_IS_FETCHING';\r\n\r\n//Types\r\nexport type AuthPageType = typeof initialState;\r\nexport type AuthActionTypes =\r\n    | ReturnType<typeof setAuthUsersData>\r\n    | ReturnType<typeof toggleIsFetching>\r\n\r\n//Initial State\r\nconst initialState = {\r\n    userId: 5513 as number | null,\r\n    login: 'hrudkouski' as string | null,\r\n    email: 'aprilshower19@gmail.com' as string | null,\r\n    isAuth: false as boolean,\r\n    isFetching: false as boolean,\r\n}\r\n\r\n// Reducer\r\nexport const authReducer = (state: AuthPageType = initialState, action: AuthActionTypes): AuthPageType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setAuthUsersData = (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\r\n    type: SET_AUTH_USERS_DATA,\r\n    payload: {userId, login, email, isAuth}\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\n\r\n// Thunk Creators\r\nexport const getAuthUserData = (): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await authApi.amIsAuth()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(toggleIsFetching(false));\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUsersData(id, login, email, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await authApi.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages : 'Some error';\r\n            let action = stopSubmit('login', {_error: message});\r\n            dispatch(action)\r\n        }\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => {\r\n    debugger\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await authApi.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setAuthUsersData(null, null, null, false))\r\n        }\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.AppNav}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/profile\"}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/dialogs\"}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/news\"}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/users\"}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/music\"}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/settings\"}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.active} to={\"/findFriends\"}>Find friends</NavLink>\r\n                <div><img\r\n                    src='https://mpng.subpng.com/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'\r\n                    alt=\"Friends\"/>\r\n                    <img\r\n                        src='https://mpng.subpng.com/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'\r\n                        alt=\"Friends\"/>\r\n                    <img\r\n                        src='https://mpng.subpng.com/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'\r\n                        alt=\"Friends\"/></div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Music.module.css'\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Settings.module.css'\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './FindFriends.module.css'\r\n\r\nexport const FindFriends = () => {\r\n    return (\r\n        <div className={s.findFriends}>\r\n            FindFriends\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from \"../../logo.svg\";\r\nimport s from './Header.module.css'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n    isFetching: boolean\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({login, isFetching, isAuth, logout}) => {\r\n\r\n    if (isFetching) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <header className={s.AppHeader}>\r\n            <img src={logo} className={s.AppLogo} alt=\"logo\"/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? <div>\r\n                        <span className={s.loginTitle}>Username: </span>\r\n                        <span className={s.userName}>{login}</span>\r\n                        <button style={{marginLeft: '15px'}} onClick={logout}>LogOut</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>\r\n                        Please login to continue\r\n                    </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, setAuthUsersData, toggleIsFetching} from \"../../redux/auth_reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from 'redux';\r\n\r\nexport type MapStatePropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    isFetching: boolean\r\n};\r\ntype MapDispatchToPropsType = {\r\n    setAuthUsersData: (userId: number, login: string, email: string) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    logout: () => void\r\n}\r\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchToPropsType;\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        isFetching: state.auth.isFetching,\r\n    };\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setAuthUsersData,\r\n        toggleIsFetching,\r\n        logout\r\n    }),\r\n)(HeaderContainer);\r\n","// Actions\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {getAuthUserData, toggleIsFetching} from \"./auth_reducer\";\r\n\r\nconst SET_INITIALIZED = 'social-network-ts/app_reducer/SET_INITIALIZED'\r\n\r\n//Types\r\nexport type ActionsTypesAPP = ReturnType<typeof setInitialized>;\r\ntype AppStateType = typeof initialState;\r\n\r\n//Initial State\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\n// Reducer\r\nexport const appReducer = (state: AppStateType = initialState, action: ActionsTypesAPP): AppStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: action.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const setInitialized = (value: boolean) => {\r\n    return {type: SET_INITIALIZED, value} as const\r\n}\r\n\r\n// ThunkCreator\r\nexport const initializeApp = (): AppThunk => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then( () => {\r\n                dispatch(setInitialized(true))\r\n                dispatch(toggleIsFetching(false));\r\n            })\r\n    }\r\n}","import {ActionsTypesDR} from \"./dialogs_reducer\"; // Refactoring\r\n\r\n//Types\r\nexport type SideBarType = {}\r\n\r\n//Initial State\r\nlet initialState: SideBarType = {};\r\n\r\n// Reducer\r\nexport const sideBarReducer = (state: SideBarType = initialState, action: ActionsTypesDR): SideBarType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ActionsTypesPR, profileReducer} from \"./profile_reducer\";\r\nimport {UsersActionTypes, usersReducer} from \"./users_reducer\";\r\nimport {AuthActionTypes, authReducer} from \"./auth_reducer\";\r\nimport {ActionsTypesDR, dialogsReducer} from \"./dialogs_reducer\";\r\nimport {sideBarReducer} from \"./sideBar_reducer\";\r\nimport thunkMiddleWare, {ThunkAction} from 'redux-thunk';\r\nimport {FormAction, reducer as formReducer} from 'redux-form';\r\nimport {ActionsTypesAPP, appReducer} from \"./app_reducer\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppActionType =\r\n    | ActionsTypesPR\r\n    | ActionsTypesDR\r\n    | UsersActionTypes\r\n    | AuthActionTypes\r\n    | FormAction\r\n    | ActionsTypesAPP\r\n// export type StoreType = typeof store;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionType>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n","import React, {Suspense} from 'react';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport s from '../src/App.module.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {FindFriends} from './components/FindFriends/FindFriends';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app_reducer\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\nexport type MapStatePropsType = {\r\n    initialized: boolean\r\n};\r\nexport type AppContainerPropsType = MapStatePropsType & MapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    };\r\n}\r\n\r\nclass App extends React.Component<AppContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <Suspense fallback={<Preloader/>}>\r\n                <HashRouter>\r\n                    <div className={s.AppWrapper}>\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <div className={s.AppContent}>\r\n                            <Route render={() => <ProfileContainer/>} path=\"/profile/:userID?\"/>\r\n                            <Route render={() => <DialogsContainer/>} exact path=\"/dialogs\"/>\r\n                            <Route render={() => <UsersContainer/>} exact path=\"/users\"/>\r\n                            <Route component={News} path=\"/news\"/>\r\n                            <Route component={Music} path=\"/music\"/>\r\n                            <Route component={Settings} path=\"/settings\"/>\r\n                            <Route component={FindFriends} path=\"/findFriends\"/>\r\n                            <Route component={Login} path=\"/login\"/>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </Suspense>\r\n        );\r\n    }\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        initializeApp,\r\n    }),\r\n)(App);\r\n\r\nexport const MainApp = () => {\r\n    return <React.StrictMode>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </React.StrictMode>\r\n}\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {MainApp} from \"./App\";\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__3RgHs\",\"AppLogo\":\"Header_AppLogo__3z8wq\",\"loginBlock\":\"Header_loginBlock__1mU5U\",\"userName\":\"Header_userName__lGbDY\",\"loginTitle\":\"Header_loginTitle__vm67N\"};","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsRoller}>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"App_AppWrapper__V62o8\",\"AppContent\":\"App_AppContent__qt_pG\"};","import {AppDispatch} from \"./redux-store\";\r\nimport {profileApi} from \"../api/api\";\r\n\r\n// Actions\r\nconst ADD_POST = 'social-network-ts/profile_reducer/ADD_POST';\r\nconst SET_USER_PROFILE = 'social-network-ts/profile_reducer/SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS = 'social-network-ts/profile_reducer/SET_PROFILE_STATUS';\r\nconst UPDATE_PROFILE_STATUS = 'social-network-ts/profile_reducer/UPDATE_PROFILE_STATUS';\r\n\r\n//Types\r\nexport type PostType = {\r\n    id: number,\r\n    message: string,\r\n    likesCount: number\r\n}\r\nexport type ProfileUserType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profileUser: ProfileUserType | null\r\n    profileStatus: string\r\n}\r\nexport type addPostAT = ReturnType<typeof addPost>\r\nexport type setUsersProfileAT = ReturnType<typeof setUsersProfile>\r\nexport type setProfileStatusAT = ReturnType<typeof setProfileStatus>\r\nexport type updateProfileStatusAT = ReturnType<typeof updateProfileStatus>\r\nexport type ActionsTypesPR = addPostAT\r\n    | setUsersProfileAT\r\n    | updateProfileStatusAT\r\n    | setProfileStatusAT;\r\n\r\n//Initial State\r\nconst initialState: ProfilePageType = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            message: 'Перебираемые (или итерируемые) объекты – это...',\r\n            likesCount: 9\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Конечно же, сами массивы являются перебираемыми...',\r\n            likesCount: 19\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Если объект не является массивом, но представляет...',\r\n            likesCount: 3\r\n        },\r\n    ] as Array<PostType>,\r\n    newPostText: '' as string,\r\n    profileUser: null as null | ProfileUserType,\r\n    profileStatus: '',\r\n};\r\n\r\n// Reducer\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionsTypesPR): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostMessage,\r\n                likesCount: 19\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profileUser: action.profileUser\r\n            }\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                profileStatus: action.profileStatus,\r\n            }\r\n        case UPDATE_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                profileStatus: action.newStatus,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const addPost = (newPostMessage: string) => {\r\n    return {type: ADD_POST, newPostMessage} as const\r\n}\r\nexport const setUsersProfile = (profileUser: ProfileUserType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileUser,\r\n    } as const\r\n}\r\nexport const setProfileStatus = (profileStatus: string) => {\r\n    return {\r\n        type: SET_PROFILE_STATUS,\r\n        profileStatus,\r\n    } as const\r\n}\r\nexport const updateProfileStatus = (newStatus: string) => {\r\n    return {\r\n        type: UPDATE_PROFILE_STATUS,\r\n        newStatus,\r\n    } as const\r\n}\r\n\r\n// ThunkCreator\r\nexport const getUserProfile = (userID: number) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        let response = await profileApi.getProfile(userID)\r\n        dispatch(setUsersProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const getStatus = (userID: number) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        let response = await profileApi.getStatus(userID)\r\n        dispatch(setProfileStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateStatus = (newStatus: string) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        let response = await profileApi.updateStatus(newStatus)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setProfileStatus(response.data.status));\r\n        }\r\n    }\r\n}\r\n\r\n","// Actions\r\nconst ADD_MESSAGE = 'social-network-ts/dialogs_reducer/ADD_MESSAGE';\r\n\r\n//Types\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nexport type ActionsTypesDR = ReturnType<typeof addMessage>\r\n\r\n//Initial State\r\nlet initialState: DialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Masha'},\r\n        {id: 3, name: 'Sasha'},\r\n        {id: 4, name: 'Kirill'},\r\n        {id: 5, name: 'Vasil'},\r\n        {id: 6, name: 'Jon'},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi! how are you?'},\r\n        {id: 2, message: 'Hi! How old are you?'},\r\n        {id: 3, message: 'Hi! Where are you from?'},\r\n        {id: 4, message: 'Hello! I don\\'t need books'},\r\n        {id: 5, message: 'How do you do?'},\r\n        {id: 6, message: 'I\\'m fine'},\r\n    ] as Array<MessageType>,\r\n    newMessageText: '' as string\r\n};\r\n\r\n// Reducer\r\nexport const dialogsReducer = (state: DialogPageType = initialState, action: ActionsTypesDR): DialogPageType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessagePost: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessageBody\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessagePost],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const addMessage = (newMessageBody: string) => ({type: ADD_MESSAGE, newMessageBody}) as const","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppNav\":\"Navbar_AppNav__2O-N-\",\"item\":\"Navbar_item__36B1R\",\"active\":\"Navbar_active__GyOf7\"};","export const updateObjectInArray = (items: any[], itemID: number, objPropName: string, newObjProps: any) => {\r\n    return items.map(el => el[objPropName] === itemID\r\n        ? {...el, ...newObjProps}\r\n        : el)\r\n}","import {AppThunk} from \"./redux-store\";\r\nimport {usersApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers/objects-helpers\";\r\n\r\n// Actions\r\n// enum Users {\r\n//     FOLLOW = 'social-network-ts/users_reducer/FOLLOW',\r\n//     UNFOLLOW = 'social-network-ts/users_reducer/UNFOLLOW',\r\n//     SET_USERS = 'social-network-ts/users_reducer/SET_USERS',\r\n//     SET_CURRENT_PAGE = 'social-network-ts/users_reducer/SET_CURRENT_PAGE',\r\n//     SET_TOTAL_USERS_COUNT = 'social-network-ts/users_reducer/SET_TOTAL_USERS_COUNT',\r\n//     TOGGLE_IS_FETCHING = 'social-network-ts/users_reducer/TOGGLE_IS_FETCHING',\r\n//     TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network-ts/users_reducer/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n// }\r\n\r\nconst FOLLOW = 'social-network-ts/users_reducer/FOLLOW';\r\nconst UNFOLLOW = 'social-network-ts/users_reducer/UNFOLLOW';\r\nconst SET_USERS = 'social-network-ts/users_reducer/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network-ts/users_reducer/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network-ts/users_reducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network-ts/users_reducer/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network-ts/users_reducer/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n//Types\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type FollowAT = ReturnType<typeof followUser>\r\nexport type UnFollowAT = ReturnType<typeof unFollowUser>\r\nexport type SetUsersAT = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageAT = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleFollowingProgressAT = ReturnType<typeof toggleFollowingProgress>\r\nexport type UsersActionTypes =\r\n    | FollowAT\r\n    | UnFollowAT\r\n    | SetUsersAT\r\n    | SetCurrentPageAT\r\n    | SetTotalUsersCountAT\r\n    | ToggleFollowingProgressAT\r\n    | ToggleIsFetchingAT;\r\n\r\n//Initial State\r\nconst initialState: UsersPageType = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUserCount: 100,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\n// Reducer\r\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersActionTypes): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(el => el.id === action.userID\r\n                //     ? {...el, followed: true}\r\n                //     : el)\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(el => el.id === action.userID\r\n                //     ? {...el, followed: false}\r\n                //     : el)\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalCount,\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.progress\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const followUser = (userID: number) => ({type: FOLLOW, userID} as const)\r\nexport const unFollowUser = (userID: number) => ({type: UNFOLLOW, userID} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (page: number) => ({type: SET_CURRENT_PAGE, page} as const)\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleFollowingProgress = (progress: boolean, userID: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    progress,\r\n    userID,\r\n} as const)\r\n\r\n// ThunkCreator\r\nexport const getResponseUsers = (currentPage: number): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersApi.getUsers(currentPage)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnFollowFlow = async (dispatch: Dispatch, userID: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userID));\r\n    let data = await apiMethod(userID);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userID))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userID));\r\n};\r\n\r\nexport const follow = (userID: number): AppThunk => {\r\n    // return async (dispatch) => {\r\n    //     dispatch(toggleFollowingProgress(true, userID));\r\n    //     let data = await usersApi.follow(userID)\r\n    //     if (data.resultCode === 0) {\r\n    //         dispatch(followUser(userID))\r\n    //     }\r\n    //     dispatch(toggleFollowingProgress(false, userID));\r\n    // }\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userID, usersApi.follow, followUser);\r\n    }\r\n}\r\n\r\nexport const unFollow = (userID: number): AppThunk => {\r\n    // return async (dispatch) => {\r\n    //     dispatch(toggleFollowingProgress(true, userID));\r\n    //     let data = await usersApi.unFollow(userID)\r\n    //     if (data.resultCode === 0) {\r\n    //         dispatch(unFollowUser(userID))\r\n    //     }\r\n    //     dispatch(toggleFollowingProgress(false, userID));\r\n    // }\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userID, usersApi.unFollow, unFollowUser);\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__ZrF7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__LLZrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__30q53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFriends\":\"FindFriends_findFriends__3u4U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"Preloader_ldsRoller__2oF8r\"};"],"sourceRoot":""}