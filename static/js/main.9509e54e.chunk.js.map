{"version":3,"sources":["components/Header/Header.module.css","utils/validators/validators.ts","redux/profile_reducer.ts","api/profileApi.ts","redux/dialogs_reducer.ts","redux/users_reducer.ts","utils/objects-helpers/objects-helpers.ts","api/usersApi.ts","common/Preloader/Preloader.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/FindFriends/FindFriends.module.css","components/Login/Login.module.css","api/api.ts","redux/auth_reducer.ts","api/authApi.ts","api/securityApi.ts","redux/app_reducer.ts","reportWebVitals.ts","logo.svg","redux/header_selectors.ts","components/Header/Header.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/FindFriends/FindFriends.tsx","redux/sideBar_reducer.ts","redux/redux-store.ts","components/Login/Login.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.tsx","common/Preloader/Preloader.tsx","common/FormsControls/FormsControls.module.css"],"names":["module","exports","required","value","undefined","maxLengthCreator","maxLength","length","Profile","profileApi","userID","instance","get","then","res","data","userId","newStatus","put","status","photoFile","formData","FormData","append","headers","initialState","posts","id","message","likesCount","newPostText","profileUser","profileStatus","profileReducer","state","action","type","ADD_POST","newPost","Date","getTime","newPostMessage","SET_USER_PROFILE","SET_PROFILE_STATUS","UPDATE_PROFILE_STATUS","SAVE_PHOTO_SUCCESS","photos","photo","profileActions","addPost","setUsersProfile","setProfileStatus","updateProfileStatus","savePhotoSuccess","getUserProfile","dispatch","a","getStatus","updateStatus","resultCode","alert","savePhoto","file","Error","saveProfile","getState","auth","authActions","toggleIsFetching","stopSubmit","_error","messages","Promise","reject","Dialogs","dialogs","name","newMessageText","dialogsReducer","ADD_MESSAGE","newMessagePost","newMessageBody","dialogsActions","addMessage","Users","updateObjectInArray","items","itemID","objPropName","newObjProps","map","el","usersApi","getUsers","currentPage","term","friend","unFollow","delete","follow","post","users","pageSize","totalUserCount","isFetching","followingInProgress","filter","usersReducer","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","page","SET_FILTER","payload","SET_TOTAL_USERS_COUNT","totalCount","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","progress","usersActions","followUser","unFollowUser","setUsers","setCurrentPage","setFilter","setTotalUsersCount","toggleFollowingProgress","getResponseUsers","ResultCodesEnum","axios","create","withCredentials","baseURL","Auth","authApi","email","password","rememberMe","captcha","securityApi","login","isAuth","captchaURL","authReducer","SET_AUTH_USERS_DATA","GET_CAPTCHA_URL","setAuthUsersData","getCaptchaURLSuccess","getAuthUserData","Success","CaptchaIsRequired","getCaptchaURL","logout","url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","selectIsAuth","selectLogin","selectIsFetching","Header","useSelector","useDispatch","Preloader","Layout","className","span","src","logo","s","AppLogo","alt","loginTitle","userName","style","marginLeft","onClick","to","News","Music","music","title","width","height","frameBorder","allow","Settings","FindFriends","findFriends","initialized","appActions","SET_INITIALIZED","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","sideBar","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","__store__","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","Input","formSummaryError","LoginPage","l","wrapper","href","rel","target","SubMenu","Menu","Content","Sider","Footer","ProfileContainer","React","lazy","DialogsContainer","UsersPage","this","props","initializeApp","padding","margin","Item","mode","defaultSelectedKeys","borderRight","icon","UserOutlined","LaptopOutlined","NotificationOutlined","minHeight","fallback","exact","path","render","component","textAlign","Component","AppContainer","connect","all","MainApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","placeholder","validate","text","ldsRoller"],"mappings":"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","file":"static/js/main.9509e54e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__3RgHs\",\"AppLogo\":\"Header_AppLogo__3z8wq\",\"loginBlock\":\"Header_loginBlock__1mU5U\",\"userName\":\"Header_userName__lGbDY\",\"loginTitle\":\"Header_loginTitle__vm67N\"};","export type ValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: ValidatorType = (value) => value ? undefined : \"Field is required\";\r\n\r\nexport const maxLengthCreator = (maxLength: string) => (value: string) => {\r\n  return (+value.length > +maxLength) ? `Max length is ${maxLength} symbols` : undefined;\r\n}","import {AppDispatch, AppThunk, GetActionsTypes} from \"./redux-store\";\r\nimport {ProfileFormDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\nimport {authActions} from \"./auth_reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotoType} from \"../types/types\";\r\nimport {profileApi} from \"../api/profileApi\";\r\n\r\n//Actions\r\nenum Profile {\r\n  ADD_POST = 'social-network-ts/profile_reducer/ADD_POST',\r\n  SET_USER_PROFILE = 'social-network-ts/profile_reducer/SET_USER_PROFILE',\r\n  SET_PROFILE_STATUS = 'social-network-ts/profile_reducer/SET_PROFILE_STATUS',\r\n  UPDATE_PROFILE_STATUS = 'social-network-ts/profile_reducer/UPDATE_PROFILE_STATUS',\r\n  SAVE_PHOTO_SUCCESS = 'social-network-ts/profile_reducer/SAVE_PHOTO_SUCCESS',\r\n}\r\n\r\n//Initial State\r\nconst initialState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      message: 'Перебираемые (или итерируемые) объекты – это...',\r\n      likesCount: 9\r\n    },\r\n    {\r\n      id: 2,\r\n      message: 'Конечно же, сами массивы являются перебираемыми...',\r\n      likesCount: 19\r\n    },\r\n    {\r\n      id: 3,\r\n      message: 'Если объект не является массивом, но представляет...',\r\n      likesCount: 3\r\n    },\r\n  ] as Array<PostType>,\r\n  newPostText: '' as string,\r\n  profileUser: null as null | ProfileUserType,\r\n  profileStatus: '',\r\n};\r\n\r\n//Reducer\r\nexport const profileReducer = (state = initialState, action: ProfileActionTypes): ProfilePageInitialStateType => {\r\n  switch (action.type) {\r\n    case Profile.ADD_POST:\r\n      const newPost: PostType = {\r\n        id: new Date().getTime(),\r\n        message: action.newPostMessage,\r\n        likesCount: 19\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      };\r\n    case Profile.SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profileUser: action.profileUser\r\n      }\r\n    case Profile.SET_PROFILE_STATUS:\r\n      return {\r\n        ...state,\r\n        profileStatus: action.profileStatus,\r\n      }\r\n    case Profile.UPDATE_PROFILE_STATUS:\r\n      return {\r\n        ...state,\r\n        profileStatus: action.newStatus,\r\n      }\r\n    case Profile.SAVE_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profileUser: {\r\n          ...state.profileUser,\r\n          photos: action.photo\r\n        } as ProfileUserType\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creators\r\nexport const profileActions = {\r\n  addPost: (newPostMessage: string) => {\r\n    return {type: Profile.ADD_POST, newPostMessage} as const\r\n  },\r\n  setUsersProfile: (profileUser: ProfileUserType) => {\r\n    return {\r\n      type: Profile.SET_USER_PROFILE,\r\n      profileUser,\r\n    } as const\r\n  },\r\n  setProfileStatus: (profileStatus: string) => {\r\n    return {\r\n      type: Profile.SET_PROFILE_STATUS,\r\n      profileStatus,\r\n    } as const\r\n  },\r\n  updateProfileStatus: (newStatus: string) => {\r\n    return {\r\n      type: Profile.UPDATE_PROFILE_STATUS,\r\n      newStatus,\r\n    } as const\r\n  },\r\n  savePhotoSuccess: (photo: PhotoType) => {\r\n    return {\r\n      type: Profile.SAVE_PHOTO_SUCCESS,\r\n      photo,\r\n    } as const\r\n  },\r\n}\r\n\r\n//ThunkCreator\r\nexport const getUserProfile = (userID: number) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    let res = await profileApi.getProfile(userID)\r\n    dispatch(profileActions.setUsersProfile(res));\r\n  }\r\n}\r\n\r\nexport const getStatus = (userID: number) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    let res = await profileApi.getStatus(userID)\r\n    dispatch(profileActions.setProfileStatus(res));\r\n  }\r\n}\r\n\r\nexport const updateStatus = (newStatus: string) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      let res = await profileApi.updateStatus(newStatus)\r\n      if (res.resultCode === 0) {\r\n        dispatch(profileActions.setProfileStatus(newStatus));\r\n      }\r\n    } catch (e) {\r\n      alert(e)\r\n    }\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: File) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      let res = await profileApi.savePhoto(file)\r\n      if (res.resultCode === 0) {\r\n        dispatch(profileActions.savePhotoSuccess(res.data.photos));\r\n      }\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveProfile = (formData: ProfileFormDataType): AppThunk => {\r\n  return async (dispatch, getState) => {\r\n    const userID = getState().auth.userId;\r\n    dispatch(authActions.toggleIsFetching(true));\r\n    const res = await profileApi.saveProfile(formData)\r\n    if (res.resultCode === 0) {\r\n      if (userID) {\r\n        await dispatch(getUserProfile(userID));\r\n      } else {\r\n        dispatch(stopSubmit('edit_profile', {\r\n          _error: res.messages[0]\r\n        }))\r\n        return Promise.reject(res.messages[0])\r\n      }\r\n    }\r\n    dispatch(authActions.toggleIsFetching(false));\r\n  }\r\n}\r\n\r\n//Types\r\nexport type PostType = {\r\n  id: number\r\n  message: string\r\n  likesCount: number\r\n}\r\nexport type ContactsType = {\r\n  facebook: string\r\n  website: string\r\n  vk: string\r\n  twitter: string\r\n  instagram: string\r\n  youtube: string\r\n  github: string\r\n  mainLink: string\r\n}\r\nexport type ProfileUserType = {\r\n  aboutMe: string\r\n  contacts: ContactsType,\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  userId: number\r\n  photos: PhotoType\r\n}\r\nexport type ProfilePageInitialStateType = typeof initialState;\r\nexport type ProfileActionTypes = GetActionsTypes<typeof profileActions>\r\n\r\n","import {ProfileFormDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\nimport {instance, ApiResponseType} from \"./api\";\r\nimport {ProfileUserType} from \"../redux/profile_reducer\";\r\nimport {PhotoType} from \"../types/types\";\r\n\r\ntype SavePhotoResponseType = {\r\n  photos: PhotoType\r\n}\r\n\r\nexport const profileApi = {\r\n  getProfile(userID: number | null) {\r\n    return instance.get<ProfileUserType>(`profile/${userID}`)\r\n        .then(res => res.data)\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get<string>(`profile/status/${userId}`)\r\n        .then(res => res.data)\r\n  },\r\n  updateStatus(newStatus: string) {\r\n    return instance.put<ApiResponseType>(`profile/status`, {status: newStatus})\r\n        .then(res => res.data)\r\n  },\r\n  savePhoto(photoFile: File) {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photoFile)\r\n    return instance.put<ApiResponseType<SavePhotoResponseType>>(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n        .then(res => res.data)\r\n  },\r\n  saveProfile(formData: ProfileFormDataType) {\r\n    return instance.put<ApiResponseType>(`profile`, formData)\r\n        .then(res => res.data)\r\n  },\r\n}","import {GetActionsTypes} from \"./redux-store\";\r\n\r\n//Actions\r\nenum Dialogs {\r\n  ADD_MESSAGE = 'social-network-ts/dialogs_reducer/ADD_MESSAGE',\r\n}\r\n\r\n//Initial State\r\nlet initialState: DialogPageInitialStateType = {\r\n  dialogs: [\r\n    {id: 1, name: 'Nikita'},\r\n    {id: 2, name: 'Masha'},\r\n    {id: 3, name: 'Sasha'},\r\n    {id: 4, name: 'Kirill'},\r\n    {id: 5, name: 'Vasil'},\r\n    {id: 6, name: 'Jon'},\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    {id: 1, message: 'Hi! how are you?'},\r\n    {id: 2, message: 'Hi! How old are you?'},\r\n    {id: 3, message: 'Hi! Where are you from?'},\r\n    {id: 4, message: 'Hello! I don\\'t need books'},\r\n    {id: 5, message: 'How do you do?'},\r\n    {id: 6, message: 'I\\'m fine'},\r\n  ] as Array<MessageType>,\r\n  newMessageText: '' as string\r\n};\r\n\r\n//Reducer\r\nexport const dialogsReducer = (state = initialState, action: DialogsActionTypes): DialogPageInitialStateType => {\r\n  switch (action.type) {\r\n    case Dialogs.ADD_MESSAGE:\r\n      const newMessagePost: MessageType = {\r\n        id: new Date().getTime(),\r\n        message: action.newMessageBody\r\n      }\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessagePost],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creators\r\nexport const dialogsActions = {\r\n  addMessage: (newMessageBody: string) => ({\r\n    type: Dialogs.ADD_MESSAGE,\r\n    newMessageBody\r\n  }) as const\r\n}\r\n\r\n//Types\r\nexport type MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\nexport type DialogType = {\r\n  id: number\r\n  name: string\r\n}\r\nexport type DialogPageInitialStateType = {\r\n  dialogs: Array<DialogType>\r\n  messages: Array<MessageType>\r\n  newMessageText: string\r\n}\r\nexport type DialogsActionTypes = GetActionsTypes<typeof dialogsActions>","import {AppThunk, GetActionsTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers/objects-helpers\";\r\nimport {PhotoType} from \"../types/types\";\r\nimport {usersApi} from \"../api/usersApi\";\r\nimport {ApiResponseType} from \"../api/api\";\r\n\r\n//Actions\r\nenum Users {\r\n  FOLLOW = 'social-network-ts/users_reducer/FOLLOW',\r\n  UNFOLLOW = 'social-network-ts/users_reducer/UNFOLLOW',\r\n  SET_USERS = 'social-network-ts/users_reducer/SET_USERS',\r\n  SET_CURRENT_PAGE = 'social-network-ts/users_reducer/SET_CURRENT_PAGE',\r\n  SET_FILTER = 'social-network-ts/users_reducer/SET_FILTER',\r\n  SET_TOTAL_USERS_COUNT = 'social-network-ts/users_reducer/SET_TOTAL_USERS_COUNT',\r\n  TOGGLE_IS_FETCHING = 'social-network-ts/users_reducer/TOGGLE_IS_FETCHING',\r\n  TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network-ts/users_reducer/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n}\r\n\r\n//Initial State\r\nconst initialState = {\r\n  users: [] as Array<UserType>,\r\n  pageSize: 5,\r\n  totalUserCount: 100,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>,\r\n  filter: {term: '', friend: null as null | boolean},\r\n};\r\n\r\n//Reducer\r\nexport const usersReducer = (state = initialState, action: UsersActionTypes): UsersPageInitialStateType => {\r\n  switch (action.type) {\r\n    case Users.FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n      }\r\n    case Users.UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n      }\r\n    case Users.SET_USERS:\r\n      return {...state, users: [...action.users]}\r\n    case Users.SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.page}\r\n    case Users.SET_FILTER:\r\n      return {...state, filter: action.payload}\r\n    case Users.SET_TOTAL_USERS_COUNT:\r\n      return {...state, totalUserCount: action.totalCount}\r\n    case Users.TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case Users.TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.progress\r\n            ? [...state.followingInProgress, action.userID]\r\n            : state.followingInProgress.filter(id => id !== action.userID)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creators\r\nexport const usersActions = {\r\n  followUser: (userID: number) => ({type: Users.FOLLOW, userID} as const),\r\n  unFollowUser: (userID: number) => ({type: Users.UNFOLLOW, userID} as const),\r\n  setUsers: (users: Array<UserType>) => ({\r\n    type: Users.SET_USERS, users\r\n  } as const),\r\n  setCurrentPage: (page: number) => ({\r\n    type: Users.SET_CURRENT_PAGE, page\r\n  } as const),\r\n  setFilter: (filter: FilterType) => ({\r\n    type: Users.SET_FILTER, payload: filter\r\n  } as const),\r\n  setTotalUsersCount: (totalCount: number) => ({\r\n    type: Users.SET_TOTAL_USERS_COUNT, totalCount\r\n  } as const),\r\n  toggleIsFetching: (isFetching: boolean) => ({\r\n    type: Users.TOGGLE_IS_FETCHING, isFetching\r\n  } as const),\r\n  toggleFollowingProgress: (progress: boolean, userID: number) => ({\r\n    type: Users.TOGGLE_IS_FOLLOWING_PROGRESS, progress, userID,\r\n  } as const),\r\n}\r\n\r\n//ThunkCreator\r\nexport const getResponseUsers = (currentPage: number, filter: FilterType): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(usersActions.toggleIsFetching(true));\r\n    dispatch(usersActions.setCurrentPage(currentPage));\r\n    dispatch(usersActions.setFilter(filter));\r\n    let res = await usersApi.getUsers(currentPage, filter.term, filter.friend)\r\n    dispatch(usersActions.toggleIsFetching(false));\r\n    dispatch(usersActions.setUsers(res.items));\r\n    dispatch(usersActions.setTotalUsersCount(res.totalCount));\r\n  }\r\n}\r\n\r\nconst _followUnFollowFlow = async (dispatch: Dispatch<UsersActionTypes>,\r\n                                   userID: number,\r\n                                   apiMethod: (userID: number) => Promise<ApiResponseType>,\r\n                                   actionCreator: (userID: number) => UsersActionTypes) => {\r\n  dispatch(usersActions.toggleFollowingProgress(true, userID));\r\n  let response = await apiMethod(userID);\r\n  if (response.resultCode === 0) {\r\n    dispatch(actionCreator(userID))\r\n  }\r\n  dispatch(usersActions.toggleFollowingProgress(false, userID));\r\n};\r\n\r\nexport const follow = (userID: number): AppThunk => {\r\n  return async (dispatch) => {\r\n    await _followUnFollowFlow(dispatch, userID, usersApi.follow.bind(usersApi), usersActions.followUser);\r\n  }\r\n}\r\n\r\nexport const unFollow = (userID: number): AppThunk => {\r\n  return async (dispatch) => {\r\n    await _followUnFollowFlow(dispatch, userID, usersApi.unFollow.bind(usersApi), usersActions.unFollowUser);\r\n  }\r\n}\r\n\r\n//Types\r\nexport type UserType = {\r\n  name: string\r\n  id: number\r\n  uniqueUrlName: string\r\n  photos: PhotoType\r\n  status: string\r\n  followed: boolean\r\n}\r\nexport type FilterType = typeof initialState.filter;\r\nexport type UsersPageInitialStateType = typeof initialState\r\nexport type UsersActionTypes = GetActionsTypes<typeof usersActions>","export const updateObjectInArray = (items: any[], itemID: number, objPropName: string, newObjProps: any) => {\r\n    return items.map(el => el[objPropName] === itemID\r\n        ? {...el, ...newObjProps}\r\n        : el)\r\n}","import {GetUsersItemsType, instance, ApiResponseType} from \"./api\";\r\n\r\nexport const usersApi = {\r\n  getUsers(currentPage: number, term: string = '', friend: null | boolean = null) {\r\n    return instance.get<GetUsersItemsType>(`users?page=${currentPage}&count=10&term=${term}` + (friend === null ? '' : `&friend=${friend}`) )\r\n        .then(res => res.data)\r\n  },\r\n  unFollow(id: number) {\r\n    return instance.delete(`follow/${id}`)\r\n        .then(res => res.data) as Promise<ApiResponseType>\r\n  },\r\n  follow(id: number) {\r\n    return instance.post<ApiResponseType>(`follow/${id}`)\r\n        .then(res => res.data)\r\n  },\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"Preloader_ldsRoller__2oF8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__ZrF7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__LLZrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__30q53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFriends\":\"FindFriends_findFriends__3u4U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3ctdC\"};","import axios from \"axios\";\r\nimport {UserType} from \"../redux/users_reducer\";\r\n\r\nexport enum ResultCodesEnum {\r\n  Success = 0,\r\n  Error = 1,\r\n  CaptchaIsRequired = 10,\r\n}\r\n\r\n//Types\r\nexport type ApiResponseType<D = {}, RC = ResultCodesEnum> = {\r\n  data: D\r\n  resultCode: RC\r\n  messages: string[]\r\n  fieldsErrors: string[]\r\n}\r\n\r\nexport type GetUsersItemsType = {\r\n  items: Array<UserType>\r\n  totalCount: number\r\n  error: null | string\r\n}\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  headers: {'API-KEY': '3af7a44d-0a6b-4bf7-b34b-b5730fa5756f'},\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n})\r\n\r\n\r\n\r\n","import {AppThunk, GetActionsTypes} from \"./redux-store\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authApi} from \"../api/authApi\";\r\nimport {securityApi} from \"../api/securityApi\";\r\n\r\n//Actions\r\nenum Auth {\r\n  SET_AUTH_USERS_DATA = 'social-network-ts/auth_reducer/SET_AUTH_USERS_DATA',\r\n  TOGGLE_IS_FETCHING = 'social-network-ts/auth_reducer/TOGGLE_IS_FETCHING',\r\n  GET_CAPTCHA_URL = 'social-network-ts/auth_reducer/GET_CAPTCHA_URL',\r\n}\r\n\r\n//Initial State\r\nconst initialState = {\r\n  userId: 5513 as number | null,\r\n  login: 'hrudkouski' as string | null,\r\n  email: 'aprilshower19@gmail.com' as string | null,\r\n  isAuth: false as boolean,\r\n  isFetching: false as boolean,\r\n  captchaURL: null as string | null, // if null, then captcha is not required\r\n}\r\n\r\n//Reducer\r\nexport const authReducer = (state = initialState, action: AuthActionTypes): AuthInitialStateType => {\r\n  switch (action.type) {\r\n    case Auth.SET_AUTH_USERS_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case Auth.TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case Auth.GET_CAPTCHA_URL:\r\n      return {...state, ...action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creators\r\nexport const authActions = {\r\n  setAuthUsersData: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\r\n    type: Auth.SET_AUTH_USERS_DATA,\r\n    payload: {userId, login, email, isAuth}\r\n  } as const),\r\n  toggleIsFetching: (isFetching: boolean) => ({\r\n    type: Auth.TOGGLE_IS_FETCHING,\r\n    isFetching\r\n  } as const),\r\n  getCaptchaURLSuccess: (captchaURL: string | null) => ({\r\n    type: Auth.GET_CAPTCHA_URL,\r\n    payload: {captchaURL}\r\n  } as const),\r\n}\r\n\r\n//Thunk Creators\r\nexport const getAuthUserData = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(authActions.toggleIsFetching(true));\r\n    let res = await authApi.amIsAuth()\r\n    if (res.resultCode === ResultCodesEnum.Success) {\r\n      dispatch(authActions.toggleIsFetching(false));\r\n      let {id, login, email} = res.data;\r\n      dispatch(authActions.setAuthUsersData(id, login, email, true));\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(authActions.toggleIsFetching(true));\r\n    let res = await authApi.login(email, password, rememberMe, captcha)\r\n    if (res.resultCode === ResultCodesEnum.Success) {\r\n      dispatch(getAuthUserData())\r\n    } else if (res.resultCode === ResultCodesEnum.CaptchaIsRequired) {\r\n      dispatch(getCaptchaURL())\r\n    } else {\r\n      let message = res.messages.length > 0 ? res.messages : 'Some error';\r\n      let action = stopSubmit('login', {_error: message});\r\n      dispatch(action)\r\n    }\r\n    dispatch(authActions.toggleIsFetching(false));\r\n  }\r\n}\r\n\r\nexport const logout = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(authActions.toggleIsFetching(true));\r\n    let res = await authApi.logout()\r\n    if (res.resultCode === ResultCodesEnum.Success) {\r\n      dispatch(authActions.toggleIsFetching(false));\r\n      dispatch(authActions.setAuthUsersData(null, null, null, false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCaptchaURL = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    const res = await securityApi.getCaptcha()\r\n    const captchaURL = res.url;\r\n    dispatch(authActions.getCaptchaURLSuccess(captchaURL))\r\n  }\r\n}\r\n\r\n//Types\r\ntype AuthInitialStateType = typeof initialState;\r\nexport type AuthActionTypes = GetActionsTypes<typeof authActions>","import {instance, ApiResponseType} from \"./api\";\r\n\r\n//Types\r\ntype AuthResponseType = {\r\n  id: number\r\n  email: string\r\n  login: string\r\n}\r\ntype LoginResponseType = {\r\n  userId: number\r\n}\r\n\r\nexport const authApi = {\r\n  amIsAuth() {\r\n    return instance.get<ApiResponseType<AuthResponseType>>(`auth/me`)\r\n        .then(res => res.data)\r\n  },\r\n  login(email: string, password: string, rememberMe: boolean = false,\r\n        captcha: string | null = null) {\r\n    return instance.post<ApiResponseType<LoginResponseType>>(`auth/login`, {\r\n      email, password, rememberMe, captcha\r\n    })\r\n        .then(res => res.data)\r\n  },\r\n  logout() {\r\n    return instance.delete<ApiResponseType>(`auth/login`)\r\n        .then(res => res.data)\r\n  }\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n  url: string | null\r\n}\r\nexport const securityApi = {\r\n  getCaptcha() {\r\n    return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n        .then(res => res.data)\r\n  },\r\n}","import {AppThunk, GetActionsTypes} from \"./redux-store\";\r\nimport {authActions, getAuthUserData} from \"./auth_reducer\";\r\n\r\n//Actions\r\nenum App {\r\n  SET_INITIALIZED = 'social-network-ts/app_reducer/SET_INITIALIZED',\r\n}\r\n\r\n//Initial State\r\nconst initialState = {\r\n  initialized: false as boolean,\r\n};\r\n\r\n//Reducer\r\nexport const appReducer = (state = initialState, action: AppActionTypes): AppInitialStateType => {\r\n  switch (action.type) {\r\n    case App.SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: action.value,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creators\r\nexport const appActions = {\r\n  setInitialized: (value: boolean) => ({type: App.SET_INITIALIZED, value}) as const,\r\n}\r\n\r\n//ThunkCreator\r\nexport const initializeApp = (): AppThunk => {\r\n  return (dispatch) => {\r\n    dispatch(authActions.toggleIsFetching(true));\r\n    let res = dispatch(getAuthUserData());\r\n    Promise.all([res])\r\n        .then(() => {\r\n          dispatch(appActions.setInitialized(true))\r\n          dispatch(authActions.toggleIsFetching(false));\r\n        })\r\n  }\r\n}\r\n\r\n//Types\r\ntype AppInitialStateType = typeof initialState\r\nexport type AppActionTypes = GetActionsTypes<typeof appActions>;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state: AppStateType) => state.auth.isAuth;\r\nexport const selectLogin = (state: AppStateType) => state.auth.login;\r\nexport const selectIsFetching = (state: AppStateType) => state.auth.isFetching;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from \"../../logo.svg\";\r\nimport s from './Header.module.css'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {Avatar, Button, Col, Layout, Row} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectIsAuth, selectIsFetching, selectLogin} from \"../../redux/header_selectors\";\r\nimport {logout} from \"../../redux/auth_reducer\";\r\n\r\ntype HeaderPropsType = {}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = () => {\r\n\r\n  const login = useSelector(selectLogin)\r\n  const isAuth = useSelector(selectIsAuth)\r\n  const isFetching = useSelector(selectIsFetching)\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutCallback = () => dispatch(logout())\r\n\r\n  if (isFetching) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const {Header} = Layout;\r\n\r\n  return (<Header className=\"header\">\r\n        <div className=\"logo\"/>\r\n        <Row>\r\n          <Col span={18}>\r\n            <img src={logo} className={s.AppLogo} alt=\"logo\"/>\r\n          </Col>\r\n          <Col span={6}>\r\n            {isAuth\r\n                ? <div>\r\n                  <Avatar src=\"https://joeschmoe.io/api/v1/random\"/>\r\n                  <span className={s.loginTitle}>User: </span>\r\n                  <span className={s.userName}>{login}</span>\r\n                  <Button\r\n                      style={{marginLeft: '10px'}}\r\n                      onClick={logoutCallback}>\r\n                    LogOut\r\n                  </Button>\r\n                </div>\r\n                : <NavLink to={'/login'}>\r\n                  Please login to continue\r\n                </NavLink>}\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n  );\r\n}","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nexport const News = () => {\r\n  return (\r\n      <div className={s.dialogs}>News</div>\r\n  )\r\n}","import React from 'react'\r\nimport s from './Music.module.css'\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n          <iframe src=\"https://open.spotify.com/embed/playlist/37i9dQZF1DX5trt9i14X7j\"\r\n                  title='spotify'\r\n                  width=\"80%\" height=\"380\" frameBorder=\"0\"\r\n                  allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Settings.module.css'\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './FindFriends.module.css'\r\n\r\nexport const FindFriends = () => {\r\n    return (\r\n        <div className={s.findFriends}>\r\n            FindFriends\r\n        </div>\r\n    )\r\n}","import {DialogsActionTypes} from \"./dialogs_reducer\"; // Refactoring\r\n\r\n//Initial State\r\nlet initialState: SideBarType = {};\r\n\r\n//Reducer\r\nexport const sideBarReducer = (state = initialState, action: DialogsActionTypes): SideBarType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Types\r\nexport type SideBarType = {}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileActionTypes, profileReducer} from \"./profile_reducer\";\r\nimport {UsersActionTypes, usersReducer} from \"./users_reducer\";\r\nimport {AuthActionTypes, authReducer} from \"./auth_reducer\";\r\nimport {DialogsActionTypes, dialogsReducer} from \"./dialogs_reducer\";\r\nimport {sideBarReducer} from \"./sideBar_reducer\";\r\nimport thunkMiddleWare, {ThunkAction} from 'redux-thunk';\r\nimport {FormAction, reducer as formReducer} from 'redux-form';\r\nimport {AppActionTypes, appReducer} from \"./app_reducer\";\r\n\r\n//Types\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppActionType =\r\n    | ProfileActionTypes\r\n    | DialogsActionTypes\r\n    | UsersActionTypes\r\n    | AuthActionTypes\r\n    | FormAction\r\n    | AppActionTypes\r\n\r\nexport type GetActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionType>\r\n\r\n//rootReducer\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  sideBar: sideBarReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer,\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n\r\n\r\n","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport s from '../../common/FormsControls/FormsControls.module.css'\r\nimport l from '../../components/Login/Login.module.css'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\ntype LoginPropsType = {\r\n  captchaURL: string | null\r\n}\r\n\r\nexport type LoginFormDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha: string | null\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormDataType, string>\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType, LoginPropsType> & LoginPropsType>\r\n    = (({\r\n          handleSubmit,\r\n          error,\r\n          captchaURL,\r\n        }) => {\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        {createField<LoginFormValuesTypeKeys>('email', 'email', Input, [required])}\r\n        {createField<LoginFormValuesTypeKeys>('password', 'password', Input, [required], {type: 'password'})}\r\n        {createField<LoginFormValuesTypeKeys>('rememberMe', 'email', Input, [], {type: 'checkbox'})}\r\n\r\n        <div>\r\n          {captchaURL && <img src={captchaURL} alt={captchaURL}/>}\r\n        </div>\r\n\r\n        {captchaURL && createField<LoginFormValuesTypeKeys>('captcha', 'Symbols from image', Input, [])}\r\n\r\n        <div>\r\n          <button>Login</button>\r\n        </div>\r\n\r\n        {error && <span className={s.formSummaryError}>\r\n                {error}\r\n            </span>}\r\n      </form>\r\n  )\r\n})\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormDataType, LoginPropsType>({form: 'loginForm'})(LoginForm)\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\r\n  const captchaURL = useSelector((state: AppStateType) => state.auth.captchaURL)\r\n  const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n  const isFetching = useSelector((state: AppStateType) => state.auth.isFetching)\r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmit = (formData: LoginFormDataType) => {\r\n    dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n  }\r\n\r\n  if (isAuth) return <Redirect to={`/profile/5513`}/>\r\n  if (isFetching) return <Preloader/>\r\n\r\n  return (\r\n      <div className={l.wrapper}>\r\n        <div>\r\n          <span>You can register -\r\n            <a href={'https://social-network.samuraijs.com/'}\r\n               rel={'noreferrer'}\r\n               target={'_blank'}>here\r\n            </a>\r\n          </span>\r\n          <div>or use test account:</div>\r\n          <div>Email: free@samuraijs.com</div>\r\n          <div>Password: free</div>\r\n        </div>\r\n\r\n        <h1>Please, login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL}/>\r\n      </div>\r\n  )\r\n}","import React, {Suspense} from 'react';\r\nimport {HashRouter, Link, Redirect, Route, Switch} from 'react-router-dom';\r\nimport {Header} from './components/Header/Header';\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {FindFriends} from './components/FindFriends/FindFriends';\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app_reducer\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {LoginPage} from './components/Login/Login';\r\nimport 'antd/dist/antd.css';\r\nimport {Layout, Menu, Breadcrumb} from 'antd';\r\nimport {UserOutlined, LaptopOutlined, NotificationOutlined} from '@ant-design/icons';\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Content, Sider, Footer} = Layout;\r\n\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersPage = React.lazy(() => import('./components/Users/UsersPage'));\r\n\r\nclass App extends React.Component<AppContainerPropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) return <Preloader/>\r\n    return (\r\n        <Layout>\r\n          <Header/>\r\n          <Layout style={{padding: '0 24px 24px'}}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>List</Breadcrumb.Item>\r\n              <Breadcrumb.Item>App</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </Layout>\r\n          <Layout>\r\n            <Sider width={250} className=\"site-layout-background\">\r\n              <Menu\r\n                  mode='inline'\r\n                  defaultSelectedKeys={['1']}\r\n                  style={{height: '100%', borderRight: 0}}>\r\n                <SubMenu key=\"Profile\" icon={<UserOutlined/>} title=\"My Profile\">\r\n                  <Menu.Item key=\"1\">\r\n                    <Link to={\"/profile\"}>Profile</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"2\">\r\n                    <Link to={\"/dialogs\"}>Messages</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"3\">\r\n                    <Link to={\"/news\"}>News</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"4\">\r\n                    <Link to={\"/music\"}>Music</Link>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"Developers\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                  <Menu.Item key=\"5\">\r\n                    <Link to={\"/users\"}>Users</Link>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"Settings\" icon={<NotificationOutlined/>} title=\"Settings\">\r\n                  <Menu.Item key=\"6\">\r\n                    <Link to={\"/settings\"}>Settings</Link>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content\r\n                className=\"site-layout-background\"\r\n                style={{padding: 24, margin: 0, minHeight: 280,}}>\r\n              <Suspense fallback={<Preloader/>}>\r\n                <Switch>\r\n                  <Route exact path={'/'} render={() => <Redirect to=\"/profile\"/>}/>\r\n                  <Route render={() => <ProfileContainer/>} path=\"/profile/:userID?\"/>\r\n                  <Route render={() => <DialogsContainer/>} exact path=\"/dialogs\"/>\r\n                  <Route render={() => <UsersPage/>} path='/users'/>\r\n                  <Route component={News} path=\"/news\"/>\r\n                  <Route component={Music} path=\"/music\"/>\r\n                  <Route component={Settings} path=\"/settings\"/>\r\n                  <Route component={FindFriends} path=\"/findFriends\"/>\r\n                  <Route component={LoginPage} path=\"/login\"/>\r\n                  <Route path={'*'} render={() => <div>ERROR 404 </div>}/>\r\n                </Switch>\r\n              </Suspense>\r\n            </Content>\r\n          </Layout>\r\n          <Footer style={{textAlign: 'center'}}>Social Network ©2021 Created with ❤ by\r\n            Mikita Grudkowski</Footer>\r\n        </Layout>\r\n    )\r\n  }\r\n}\r\n\r\ntype MapDispatchToPropsType = { initializeApp: () => void };\r\nexport type MapStatePropsType = ReturnType<typeof mapStateToProps>\r\nexport type AppContainerPropsType = MapStatePropsType & MapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n  return {initialized: state.app.initialized};\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n      initializeApp,\r\n    }),\r\n)(App);\r\n\r\nexport const MainApp: React.FC = () => {\r\n  return <HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer/>\r\n    </Provider>\r\n  </HashRouter>\r\n}\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {MainApp} from \"./App\";\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from \"react\";\r\nimport {Field, WrappedFieldProps} from \"redux-form\";\r\nimport s from './FormsControls.module.css'\r\nimport {ValidatorType} from \"../../utils/validators/validators\";\r\nimport {WrappedFieldMetaProps} from \"redux-form/lib/Field\";\r\n\r\ntype FormControlsPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlsPropsType> = (\r\n    {\r\n      meta: {error, touched},\r\n      children\r\n    }\r\n) => {\r\n\r\n  const hasError = error && touched;\r\n\r\n  return (\r\n      <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n        <div>\r\n          {children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return <FormControl {...props}>\r\n    <textarea {...input} {...restProps}/>\r\n  </FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return <FormControl {...props}>\r\n    <input {...input} {...restProps}/>\r\n  </FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n    name: FormKeysType,\r\n    placeholder: string | undefined,\r\n    component: string | React.Component | React.FC<WrappedFieldProps>,\r\n    validate: ValidatorType[],\r\n    props = {},\r\n    className = '',\r\n    text = '',\r\n    id = ''\r\n) {\r\n  return (\r\n      <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validate}\r\n            component={component}\r\n            {...props}\r\n            id={id}\r\n            className={className}\r\n        />\r\n        {text}\r\n      </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader: React.FC = () => {\r\n  return <div className={s.ldsRoller}>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n  </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1eM7x\",\"error\":\"FormsControls_error__3vels\",\"formSummaryError\":\"FormsControls_formSummaryError__1z8YO\"};"],"sourceRoot":""}